CREATE DATABASE INVENTORY;

USE INVENTORY;

--CREATING TABLE SUPPLIER
CREATE TABLE SUPPLIER(
SID CHAR(5),
SNAME CHAR(20),
SADD VARCHAR(50),
SCITY VARCHAR(20),
SPHONE CHAR(15),
EMAIL VARCHAR(100)
);
--ADD CONSTRAINTS
--NOT NULL
ALTER TABLE SUPPLIER
ALTER COLUMN SNAME VARCHAR(20) NOT NULL;
--NOT NULL
ALTER TABLE SUPPLIER 
ALTER COLUMN SADD VARCHAR(100) NOT NULL; 
--DEFAULT 'DELHI'
ALTER TABLE SUPPLIER
ADD CONSTRAINT dfcty DEFAULT 'DELHI' FOR SCITY;
--UNIQUE 
ALTER TABLE SUPPLIER 
ADD CONSTRAINT uqp UNIQUE (SPHONE); 
--PRIMARY KEY
ALTER TABLE SUPPLIER 
ALTER COLUMN SID CHAR(5) NOT NULL;
--BEFORE MAKING ID PRIMARY KEY WE HAVE TO MAKE IT NOT NULL
ALTER TABLE SUPPLIER
ADD CONSTRAINT pk PRIMARY KEY (SID);
--INSERTING VALUES IN TABLE SUPPLIER
INSERT INTO SUPPLIER(SID,SNAME,SADD,SCITY,SPHONE,EMAIL)
VALUES
('S0001','Prateek Shandilya','H/No 32/C Rajender Park','Gurgaon','+91 7678555911','ps90@gmail.com'),
('S0002','Jatin Kumar','Flat No 332','Noida','+91 7568908765','jk89@gmail.com'),
('S0003','Lakshya Sharma','Near Metro Lajpat Nagar','Delhi','+91 9087698723','ls34@gmail.com'),
('S0004','Paras Kumar','Old Railwat Station Road','Gurgaon','+91 7844231098','pk60@gmail.com'),
('S0005','Mohit Rajput','Gali No 32/House 56','Hisar','+91 9087678965','mr69@gmail.com'),
('S0006','Om Trivedi','Near Railway Station','Rewari','+91 9977098865','om78@gmail.com'),
('S0007','Pankaj Rajput','Durga Bhai Campus','Delhi','+91 8809675432','pr23@gmail.com'),
('S0008','Reetu Rai','Near Sant Ram College','Hisar','+91 8978690987','rr56@gmail.com'),
('S0009','Neeraj Rajput','Flat 81 Near Station','Ambala','+91 7656090087','nr00@gmail.com'),
('S0010','Priya Sharma','H/No 86/ Front Of Zara','Noida','+91 9312359010','ps78@gmail.com');
--CHECK DATA
SELECT * FROM SUPPLIER

--CREATING TABLE PRODUCT
CREATE TABLE PRODUCT(
PID CHAR(5),
PDESC VARCHAR(50),
PRICE INT,
CATEGORY CHAR(2),
SID CHAR(5)
);
--ADD CONSTRAINT
--PRIMARY KEY
ALTER TABLE PRODUCT
ALTER COLUMN PID CHAR(5) NOT NULL;

ALTER TABLE PRODUCT
ADD CONSTRAINT pk1 PRIMARY KEY (PID);
--NOT NULL
ALTER TABLE PRODUCT 
ALTER COLUMN PDESC VARCHAR(50) NOT NULL;
--CHECK
ALTER TABLE PRODUCT
ADD CONSTRAINT ckprice CHECK (PRICE > 0);
--CHECK
ALTER TABLE PRODUCT
ADD CONSTRAINT ckctgry CHECK (CATEGORY IN ('IT','HA','HC'));
--FORIEGN KEY 
--ALTER TABLE PRODUCT
--ADD CONSTRAINT fkid FOREIGN KEY (SID) REFERENCES SUPPLIER (SID);
--INSERTING VALUES
INSERT INTO PRODUCT(PID,PDESC,PRICE,CATEGORY,SID)
VALUES
('P0001','HP LAPTOP 3RD GEN',56000,'IT','S0001'),
('P0002','Leenovo ThinkPad',30000,'IT','S0002'),
('P0003','Dell Keyboard',5600,'HC','S0003'),
('P0004','Lenovo ThinkPad 5 Gen',29000,'HA','S0004'),
('P0005','Asus Mointor With Hd Display',11000,'HC','S0005'),
('P0006','Asus Rog 12 Gen',99000,'IT','S0006'),
('P0007','Lenovo Laptop Cover',500,'IT','S0007'),
('P0008','Hp Laptop 6 Gen',45000,'HA','S0008'),
('P0009','Apple Mouse/Keyboard Set',8000,'IT','S0009'),
('P0010','Dell Full Accessories Kit',3500,'HA','S0010'),
('P0011','Lenovo Mouse/Keyboard Pad',900,'IT','S0011'),
('P0012','Asus Keyboard Wireless',6000,'IT','S0012'),
('P0013','Macbook 6 Pro',224000,'HC','S0013'),
('P0014','Lenovo Wired Speaker',9800,'HA','S0014'),
('P0015','Dell Wireless Mouse',1500,'IT','S0015'),
('P0016','Macbook With SSD',110000,'IT','S0016'),
('P0017','Lenovo 7i Gen Laptop',85000,'HC','S0017'),
('P0018','Asus Speaker',4500,'IT','S0018'),
('P0019','Dell Earbuds',1100,'IT','S0019'),
('P0020','Ryzen Laptop 11 Gen',90000,'HA','S0020');
--CHECK DATA
SELECT * FROM PRODUCT

--CREATING ANOTHER TABLE
CREATE TABLE STOCK(
PID CHAR(5),
SQTY INT,
ROL INT,
MOQ INT
);
--ADD CONSTRAINT
--CHECK
ALTER TABLE STOCK
ADD CONSTRAINT ckqty CHECK (SQTY >= 0);
--CHECK
ALTER TABLE STOCK
ADD CONSTRAINT ckrol CHECK (ROL > 0);
--CHECK
ALTER TABLE STOCK
ADD CONSTRAINT ckmoq CHECK (MOQ >= 5);
--INSERT DATA IN STOCK
INSERT INTO STOCK(PID,SQTY,ROL,MOQ)
VALUES
('P0001',12,10,15),
('P0002',18,12,20),
('P0003',18,8,13),
('P0004',45,10,10),
('P0005',23,20,29),
('P0006',11,5,35),
('P0007',16,10,21),
('P0008',40,35,19),
('P0009',22,20,9),
('P0010',29,15,31);
--CHECK DATA
SELECT * FROM STOCK

--CREATING ANOTHER TABLE
CREATE TABLE CUSTOMER(
CID CHAR(5),
CNAME VARCHAR(20),
ADDRESS VARCHAR(50),
CITY VARCHAR(20),
PHONE CHAR(15),
EMAIL VARCHAR(50),
DOB DATE
);
--TO CHANGE THE COLUMN NAME
EXEC SP_RENAME 'CUSTOMER.ADDRESS','CADDRESS','COLUMN';
EXEC SP_RENAME 'CUSTOMER.PHONE','CPHONE','COLUMN';
--ADD CONSTARINTS 
--NOT NULL
ALTER TABLE CUSTOMER
ALTER COLUMN CNAME VARCHAR(20) NOT NULL;
--NOT NULL
ALTER TABLE CUSTOMER
ALTER COLUMN ADDRESS VARCHAR(50) NOT NULL;
--NOT NULL
ALTER TABLE CUSTOMER
ALTER COLUMN CITY VARCHAR(20) NOT NULL;
--NOT NULL
ALTER TABLE CUSTOMER
ALTER COLUMN PHONE CHAR(15) NOT NULL;
--NOT NULL
ALTER TABLE CUSTOMER
ALTER COLUMN EMAIL VARCHAR(50) NOT NULL;
--CHECK
ALTER TABLE CUSTOMER
ADD CONSTRAINT ckdob CHECK (DOB < '1-Jan-2000');
--INSERTING VALUES
INSERT INTO CUSTOMER(CID,CNAME,CADDRESS,CITY,CPHONE,EMAIL,DOB)
VALUES
('C0001','Aman Kumar','Swaroop Garden','Gurgaon','+91 5647288765','ak@gmail.com','01-Mar-1985'),
('C0002','Rajesh Sharma','Railway Station Park-3','Rewari','+91 8789765643','rs@gmail.com','11-Dec-1985'),
('C0003','Lokesh Saroha','Flat 526','Noida','+91 8976780901','ls@gmail.com','19-Jan-1986'),
('C0004','Ritik Kumar','Vishnu Garden','Gurgaon','+91 9087890120','rk@gmail.com','30-May-1981'),
('C0005','Vipul Rewaria','Near Fruit Market','Rewari','+91 9087675545','vr@gmail.com','18-Nov-1984'),
('C0006','Arvind Kaushik','Near Zara Showroom','Noida','+91 9087109278','ak@gmail.com','25-Dec-1989'),
('C0007','Sunny Channa','lajpat Nagar H/No 12','Delhi','+91 8097865167','sc@gmail.com','21-Jul-1999'),
('C0008','Prateek Shandilya','Near Railway Station','Gurgaon','+91 9087800087','ps@gmail.com','21-Jun-1987'),
('C0009','Rajesh Roshan','Near Old Farm / C','Rewari','+91 9998000765','rr@gmail.com','09-Aug-1997'),
('C0010','Rahul Kaushik','Near Metro Villa 526','Noida','+91 9876543210','rk@gmail.com','02-Nov-1990');
--CHECK DATA
SELECT * FROM CUSTOMER

--CREATING ANOTHER TABLE
CREATE TABLE ORDERS(
OID CHAR(5),
ODATE DATETIME,
PID CHAR(5),
CID CHAR(5),
OQTY INT
);
--ADD CONSTRAINTS
--CHECK
ALTER TABLE ORDERS
ADD CONSTRAINT ckOqty CHECK (OQTY >= 1);
--INSERT DATA
INSERT INTO ORDERS(OID,ODATE,PID,CID,OQTY)
VALUES
('O0001','12-May-2001 12:23:26','P0001','C0001',5),
('O0002','03-Jul-2002 15:59:01','P0002','C0002',10),
('O0003','29-Dec-2000 09:10:11','P0003','C0003',3),
('O0004','12-Jul-2006 19:33:43','P0004','C0004',9),
('O0005','25-Oct-2003 13:20:21','P0005','C0005',11);
--CHECK DATA
SELECT * FROM ORDERS

--QUESTION 1 (DISPLAY PID,PDESC,CATEGORY,SNAME,SCITY)
SELECT P.PID,P.PDESC,P.CATEGORY,S.SNAME,S.SCITY 
FROM PRODUCT AS P
JOIN SUPPLIER AS S
ON P.SID = S.SID
--QUESTION 2 (DISPLAY OID,ODATE,CNAME,CADDRESS,CPHONE,PDESC,PRICE,OQTY)
SELECT O.OID,O.ODATE,C.CNAME,C.CADDRESS,C.CPHONE,P.PDESC,P.PRICE,O.OQTY
FROM PRODUCT AS P
JOIN ORDERS AS O ON P.PID = O.PID
JOIN CUSTOMER AS C ON C.CID = O.CID
--QUESTION 3 (CREATE A VIEW BILL.DISPLAY OID,ODATE,CNAME,ADDRESS,PHONE,PDESC,PRICE,OQTY)
CREATE VIEW BILL
AS 
	SELECT O.OID,O.ODATE,C.CNAME,C.CADDRESS,C.CPHONE,P.PDESC,P.PRICE,O.OQTY
	FROM ORDERS AS O
	JOIN PRODUCT AS P ON P.PID = O.PID
	JOIN CUSTOMER AS C ON C.CID = O.CID

SELECT * FROM BILL
--AUTO ID GENERATION USING SEQUENCE FOR TABLE CUSTOMER
CREATE SEQUENCE CUST
START WITH 1
INCREMENT BY 1
SELECT NEXT VALUE FOR CUST--TO RUN THE NEXT VALUE OF SEQUENCE
DROP SEQUENCE CUST--FOR DROPING THE SEQUENCE
--QUESTION 4A(CREATE PROCEDURE TO ADD DATA AND DISPLAY IN CUSTOMER TABLE)
CREATE PROCEDURE CUSTADDSHOW(@N AS VARCHAR(20),@A AS VARCHAR(50),@C AS VARCHAR(20),@P AS VARCHAR(15),@E AS VARCHAR(50),@D AS DATE)
AS
BEGIN

	DECLARE @I AS INT
	DECLARE @ID AS CHAR(5)

	SET @I = (NEXT VALUE FOR CUST)
	SET @ID = DBO.CID('C',@I)
	
	INSERT INTO CUSTOMER
	VALUES (@ID,@N,@A,@C,@P,@E,@D)

	SELECT * FROM CUSTOMER
	WHERE CID = @ID
END;
--EXAMPLE DATA
SELECT * FROM CUSTOMER--TO SELECT THE WHOLE DATA
DELETE FROM CUSTOMER--TO DELETE THE SPECIFIFC DATA 
WHERE CID = 'C0011'
CUSTADDSHOW 'Nikita Kandari','Krishna Chowk','Gurgaon','+91 8888888889','nkandari@gmail.com','05-May-1997'
--AUTO ID GENERATION USING SEQUENCE FOR TABLE ORDERS
CREATE SEQUENCE ORD
START WITH 1
INCREMENT BY 1
SELECT NEXT VALUE FOR ORD--TO RUN THE NEXT VALUE OF SEQUENCE
DROP SEQUENCE ORD--FOR DROPING THE SEQUENCE
--QUESTION 4B(CREATE PROCEDURE TO ADD DATA AND DISPLAY IN ORDERS TABLE)
CREATE PROCEDURE ORDADDSHOW(@PI AS CHAR(5),@CI AS CHAR(5),@OQ AS INT)
AS
BEGIN

	DECLARE @I AS INT
	DECLARE @ID AS CHAR(5)
	SET @I = (NEXT VALUE FOR ORD)
	SET @ID = DBO.CID('O',@I)

	INSERT INTO ORDERS
	VALUES (@ID,DBO.DATEE(),@PI,@CI,@OQ)

	SELECT * FROM ORDERS
	WHERE OID = @ID
END;
DROP PROCEDURE ORDADDSHOW
--EXAMPLE DATA
SELECT * FROM ORDERS--TO SELECT THE WHOLE DATA
DELETE FROM ORDERS 
WHERE OID = 'O0006'--USE TO DELETE THE SPECIFIC DATA
ORDADDSHOW 'P0021','C0021',20
--AUTO ID GENERATION USING SEQUENCE FOR TABLE PRODUCT
CREATE SEQUENCE PRDT
START WITH 1
INCREMENT BY 1
SELECT NEXT VALUE FOR PRDT--TO RUN THE NEXT VALUE OF SEQUENCE
DROP SEQUENCE PRDT--FOR DROPING THE SEQUENCE
--QUESTION 4C(CREATE PROCEDURE TO ADD DATA AND DISPLAY PRODUCT)
CREATE PROCEDURE PROADDSHOW(@DESC AS VARCHAR(50),@P AS INT,@C AS CHAR(2),@SI AS CHAR(5))
AS
BEGIN

	DECLARE @I AS INT
	DECLARE @ID AS CHAR(5)
	
	SET @I = (NEXT VALUE FOR PRDT)
	SET @ID = DBO.CID('P',@I)

	INSERT INTO PRODUCT
	VALUES (@ID,@DESC,@P,@C,@SI)

	SELECT * FROM PRODUCT
	WHERE PID = @ID
END;
--EXAMPLE DATA
SELECT * FROM PRODUCT--TO SELECT THE WHOLE DATA
PROADDSHOW 'Gen 3 Laptop',34900,'IT','S0021'
--QUESTION 4D(CREATE PROCEDURE TO ADD DATA AND DISPLAY IN STOCK TABLE)
CREATE PROCEDURE STKADDSHOW(@PI AS CHAR(5),@SQTY AS INT,@R AS INT,@M AS INT)
AS
BEGIN
	INSERT INTO STOCK(PID,SQTY,ROL,MOQ)
	VALUES (@PI,@SQTY,@R,@M)

	SELECT * FROM STOCK
	WHERE PID = @PI

END;
--EXAMPLE DATA
STKADDSHOW 'P0021',29,13,10
--AUTO ID GENERATION USING SEQUENCE FOR TABLE SUPPLIER
CREATE SEQUENCE SUPR
START WITH 1
INCREMENT BY 1
SELECT NEXT VALUE FOR SUPR--TO RUN THE NEXT VALUE OF SEQUENCE
DROP SEQUENCE SUPR--FOR DROPING THE SEQUENCE
--QUESTION 4E(CREATE PROCEDURE TO ADD DATA AND DISPLAY IN SUPPLIER TABLE)
CREATE PROCEDURE SUPPLADDSHOW(@N AS VARCHAR(20),@A AS VARCHAR(50),@C AS VARCHAR(20),@P AS CHAR(15),@E AS VARCHAR(50))
AS
BEGIN

	DECLARE @I AS INT
	DECLARE @ID AS CHAR(5)

	SET @I = (NEXT VALUE FOR SUPR)
	SET @ID = DBO.CID('S',@I)

	INSERT INTO SUPPLIER
	VALUES (@ID,@N,@A,@C,@P,@E)

	SELECT * FROM SUPPLIER
	WHERE SID = @ID
END;
--EXAMPLE DATA
SELECT * FROM SUPPLIER--TO SELECT THE WHOLE DATA
DELETE FROM SUPPLIER 
WHERE SID = 'S0011'--TO DELETE THE SPECIFI DATA
SUPPLADDSHOW 'Rakesh Raushan','Vasant Vihar','Delhi','+91 4444444446','rr@gmail.com'

--FUNCTION FOR AUTO ID
CREATE FUNCTION CID(@C AS CHAR(1),@I AS INT)
RETURNS CHAR(5)
AS 
BEGIN 
	DECLARE @ID AS CHAR(5)

	IF @I < 10
		SET @ID = CONCAT(@C,'000',@I);
	ELSE IF @I < 100
		SET @ID = CONCAT(@C,'00',@I);
	ELSE IF @I < 1000
		SET @ID = CONCAT(@C,'0',@I);
	ELSE IF @I < 10000
		SET @ID = CONCAT(@C,@I)
	ELSE
		SET @ID = 'NA'
	RETURN @ID
END;
--FUNCTION FOR GETTING AUTO DATE
CREATE FUNCTION DATEE()
RETURNS DATETIME
AS
BEGIN
	DECLARE @D AS DATETIME
	SET @D = GETDATE()
	RETURN @D
END;
--CREATING TRIGGERS FOR UPDATING STOCK WHEN NEW ORDER IS ADDED..
CREATE TRIGGER STK_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	DECLARE @OQ AS INT
	DECLARE @SQ AS INT

	SET @OQ = (SELECT OQTY FROM INSERTED)
	SET @SQ = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED))

	IF @SQ >= @OQ
		BEGIN
			UPDATE STOCK SET SQTY = SQTY - @OQ
			WHERE PID = (SELECT PID FROM INSERTED)

			COMMIT;
			PRINT('Oredr Accepted')
		END;
	ELSE
		BEGIN
			ROLLBACK;
			PRINT('Stock is less order is not accepted.')
		END;
END;
--TRY TO INSERT THE DATA INTO ORDER
ORDADDSHOW 'P0004','C0005',5--BEFORE USE THIS THE P0004 HAS 45(QTY)
							--AFTER USE THIS P0004 HAS 40(QTY)

--CREATE TRIGGER IF WE WANT TO DISCONTINUE SOME PRODUCT TO DELETE ITS ORDERS TOO
CREATE TRIGGER PRD_STK
ON PRODUCT
FOR DELETE
AS
BEGIN
	
	DELETE FROM STOCK WHERE PID = (SELECT PID FROM DELETED)
	
END;
--TRY TO DELETE DATA FROM PRODUCT
BEGIN TRANSACTION--IF CMMND RUN RIGHT IT WILL UNDO THE DATA
DELETE FROM PRODUCT
WHERE PID = 'P0002';--BEFORE RUN THIS WE HAVE PRODUCT IN BOTH PRODUCT AND STOCK TABLE P0002.
					--AFTER RUN THIS WE DO NOT HAVE PRODUCT IN BOTH TABLE.
ROLLBACK;--IT IS USE TO UNDO THE CMMND
SELECT * FROM PRODUCT
SELECT * FROM STOCK
SELECT * FROM ORDERS





